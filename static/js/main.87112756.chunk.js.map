{"version":3,"sources":["componets/ContactF/ContactForm.module.css","componets/ContactList/ContactUser/ContactUser.module.css","componets/Filter/Filter.module.css","componets/ContactList/ContactList.module.css","componets/ContactF/ContactF.js","componets/ContactList/ContactUser/ContactUser.js","componets/ContactList/ContactList.js","componets/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handelChange","event","currentTarget","value","setState","handelSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","labelForm","input","type","onChange","pattern","title","required","btnAddContact","Component","ContactUser","id","onDeleteContacts","contactItem","phone","btnDelete","onClick","ContactList","contacts","list","map","Filter","filter","inputFilter","App","formSubmitHandler","some","contact","alert","uid","console","log","deleteContact","contactId","prevState","onChangeFilter","normalizedFilter","toLowerCase","filterUser","includes","ContactF","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87112756.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1SFzQ\",\"input\":\"ContactForm_input__3dEap\",\"btnAddContact\":\"ContactForm_btnAddContact__2cD4C\",\"labelForm\":\"ContactForm_labelForm__2odCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactUser_contactItem__1pL2H\",\"name\":\"ContactUser_name__28Pw1\",\"phone\":\"ContactUser_phone__3fnXa\",\"btnDelete\":\"ContactUser_btnDelete__3uihr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Ww5E\",\"inputFilter\":\"Filter_inputFilter__pFtpZ\",\"labelForm\":\"Filter_labelForm__22tnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__caW1s\"};","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\n\nclass ContactForm extends Component  {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    \n\n    handelChange = event => {\n        const { name, value } = event.currentTarget;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handelSubmit = event => {\n        event.preventDefault()\n        // console.log(this.state)\n        this.props.onSubmit(this.state)\n        this.resetForm()\n    };\n\n    resetForm = () => {\n        this.setState({\n            name: '',\n            number: ''\n        })\n    };\n    \n    \n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={styles.form} onSubmit={this.handelSubmit}>\n            <label  className={styles.labelForm}>\n                    Name <input\n                className={styles.input}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange ={this.handelChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                \n                \n                />\n                </label>\n                <label className={styles.labelForm}>\n                    Number <input\n                className={styles.input}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                onChange ={this.handelChange}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                />\n            </label>\n                <button\n              className={styles.btnAddContact}\n                    type=\"submit\">\n          Add contact\n        </button>\n        </form>\n        );\n    };\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactUser.module.css';\n\n\nconst ContactUser = ({ id, name, number, onDeleteContacts}) => {\n    return (\n        <li  className={styles.contactItem}>\n            <span className={styles.name}>{name}</span>\n            <span className={styles.phone}>{number}</span>\n            <button\n                className={styles.btnDelete}\n                type=\"button\"\n                onClick={() => onDeleteContacts(id)}\n            >\n                Delete\n            </button>\n        </li>\n    )\n};\n\nexport default ContactUser;\n\n\nContactUser.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nimport ContactUser from './ContactUser';\n\n\nconst ContactList = ({ contacts, onDeleteContacts}) => {\n    return (\n        <ul  className={styles.list}>\n      { contacts.map(({ id, name, number })=> {\n        return (\n          <ContactUser\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContacts={onDeleteContacts}\n            id={id}\n          />\n        );\n      })}\n    </ul>\n    )\n};\n\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired\n        }).isRequired,\n    )\n};\n\nexport default ContactList;\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n    <label  className={styles.labelForm} >\n      Find contacts by name\n      <input\n       className={styles.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n      </label>\n      </div>\n  );\n};\n\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport ContactForm from './componets/ContactF';\nimport ContactList from './componets/ContactList';\nimport Filter from './componets/Filter';\n\nimport { v4 as uid } from 'uuid';\nimport contacts from './componets/ContactList/contacts.json';\n\n\n\n\nclass App extends Component {\n  state = {\n   contacts: contacts,\n  filter: ''\n }\n  \n  \n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n     \n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts. Want to replace an existing contact ?`)\n      return;\n    }\n    const id = uid();\n    this.setState({\n      contacts: [{ name, number, id }, ...contacts],\n      filter: '',\n    });\n  \n    console.log({ name, number });\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  };\n\n  \n   onChangeFilter = event => {\n    // const filterValue = event.currentTarget.value;\n    // this.setState({ filter: filterValue }); \n     this.setState({filter: event.currentTarget.value})\n  };\n\n\n  render() {\n\n    const { contacts, filter } = this.state;\n  \n    const normalizedFilter = filter.toLowerCase();\n\n    const filterUser = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  \n\n    return (\n      <div className=\"container\">\n  <h1 className=\"title\">Phonebook</h1>\n  <ContactForm onSubmit={this.formSubmitHandler} />\n\n  <h2 className=\"title\">Contacts</h2>\n  <Filter value={filter} onChange={this.onChangeFilter} />\n  <ContactList contacts={filterUser } onDeleteContacts={ this.deleteContact}/>\n</div>\n    )\n  }\n};\n \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}